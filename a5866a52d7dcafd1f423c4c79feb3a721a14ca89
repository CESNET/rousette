{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "f84cd35e_16be0fdd",
        "filename": "src/restconf/Nacm.cpp",
        "patchSetId": 8
      },
      "lineNbr": 21,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-07-17T11:23:36Z",
      "side": 1,
      "message": "to me, \"deny for all\" implies checking usernames, but this functions checks the target data node. Perhaps `isWildcardDeny`?",
      "range": {
        "startLine": 21,
        "startChar": 5,
        "endLine": 21,
        "endChar": 21
      },
      "revId": "a5866a52d7dcafd1f423c4c79feb3a721a14ca89",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "130cb070_67ef5583",
        "filename": "src/restconf/Nacm.cpp",
        "patchSetId": 8
      },
      "lineNbr": 36,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-07-17T11:23:36Z",
      "side": 1,
      "message": "whenever there\u0027s a `return false`, please also add some logging which says why it\u0027s going to reject anonymous access",
      "revId": "a5866a52d7dcafd1f423c4c79feb3a721a14ca89",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "53c3c061_0759068a",
        "filename": "src/restconf/Nacm.cpp",
        "patchSetId": 8
      },
      "lineNbr": 53,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-07-17T11:23:36Z",
      "side": 1,
      "message": "Interesting, this one allows the user to \"also\" use this anonymous-read-via-RESTCONF rule to add the same level of access to another group. Why not, I guess; maybe in future we could offer an anonymous access via CLI. Good idea!",
      "range": {
        "startLine": 53,
        "startChar": 18,
        "endLine": 53,
        "endChar": 24
      },
      "revId": "a5866a52d7dcafd1f423c4c79feb3a721a14ca89",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "918b1aaf_a6214baf",
        "filename": "src/restconf/Nacm.cpp",
        "patchSetId": 8
      },
      "lineNbr": 62,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-07-17T11:23:36Z",
      "side": 1,
      "message": "that\u0027s already checked by the previous if",
      "range": {
        "startLine": 62,
        "startChar": 12,
        "endLine": 62,
        "endChar": 28
      },
      "revId": "a5866a52d7dcafd1f423c4c79feb3a721a14ca89",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aed24043_90acf2c0",
        "filename": "src/restconf/Nacm.cpp",
        "patchSetId": 8
      },
      "lineNbr": 88,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-07-17T11:23:36Z",
      "side": 1,
      "message": "also SR_SUBSCR_PASSIVE (because we don\u0027t \"own\" these data)",
      "revId": "a5866a52d7dcafd1f423c4c79feb3a721a14ca89",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a90af470_ab9a2c1f",
        "filename": "src/restconf/Nacm.h",
        "patchSetId": 8
      },
      "lineNbr": 22,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-07-17T11:23:36Z",
      "side": 1,
      "message": "This looks a bit weird to me. Please add some docs which explain what this class is doing -- why should one instantiate it, what does it do, is it supposed to be a global one for the process (and if so, why it is not enough to just get the NACM subscription via sysrepo-cpp), or whether it\u0027s supposed to exist per-session (in that case, the constructor should probably work with data obtained from some HTTP headers instead of being parameterlss), etc",
      "revId": "a5866a52d7dcafd1f423c4c79feb3a721a14ca89",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7975fc1c_b1f81d78",
        "filename": "src/restconf/Server.cpp",
        "patchSetId": 8
      },
      "lineNbr": 128,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-07-17T11:23:36Z",
      "side": 1,
      "message": "Nothing rejects access with no remote-user. it will probably get rejected later by sysrepo\u0027s NACM code, but I\u0027d prefer some extra safety here.\n\nAlso please check my comments on that one-year-old patch from Vasek; this needs an update to README which explains the security model that we\u0027re using.",
      "range": {
        "startLine": 125,
        "startChar": 0,
        "endLine": 128,
        "endChar": 13
      },
      "revId": "a5866a52d7dcafd1f423c4c79feb3a721a14ca89",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "24a1243a_a8e17ee6",
        "filename": "tests/http-communication.cpp",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-07-17T11:23:36Z",
      "side": 1,
      "message": "I would prefer to add a simple HTTP test in a separate commit. It won\u0027t have to do anything NACM-related, so the best option (IMHO) is to move it to one of the first places in the series, and just retrieve something form ietf-system or some other \"benign\" module which is already allowed by the right-now-in-the-master-branch whitelist.\n\nWhich means that we can then squash the commit \"server: remove allow_anonymous_read_for\" to this one if we want to have an atomic and \"safe\" history with on unexpected read holes.",
      "revId": "a5866a52d7dcafd1f423c4c79feb3a721a14ca89",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68"
    }
  ]
}