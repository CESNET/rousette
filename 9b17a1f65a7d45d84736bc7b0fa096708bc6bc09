{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "a3bc2c26_22c13271",
        "filename": "src/restconf/main.cpp",
        "patchSetId": 4
      },
      "lineNbr": 67,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-08-09T20:46:45Z",
      "side": 1,
      "message": "LC_CTYPE should be enough here",
      "range": {
        "startLine": 67,
        "startChar": 24,
        "endLine": 67,
        "endChar": 30
      },
      "revId": "9b17a1f65a7d45d84736bc7b0fa096708bc6bc09",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f22fd404_0e1334b7",
        "filename": "src/restconf/main.cpp",
        "patchSetId": 4
      },
      "lineNbr": 67,
      "author": {
        "id": 1000070
      },
      "writtenOn": "2023-08-14T13:49:58Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a3bc2c26_22c13271",
      "range": {
        "startLine": 67,
        "startChar": 24,
        "endLine": 67,
        "endChar": 30
      },
      "revId": "9b17a1f65a7d45d84736bc7b0fa096708bc6bc09",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3c101901_110458ee",
        "filename": "src/restconf/uri.h",
        "patchSetId": 4
      },
      "lineNbr": 1,
      "author": {
        "id": 1000070
      },
      "writtenOn": "2023-08-10T11:04:36Z",
      "side": 1,
      "message": "Let\u0027s hide all this as an impl detail of the parser. The rousette Server class needs only to understand a function that takes a string and returns string containing libyang path",
      "revId": "9b17a1f65a7d45d84736bc7b0fa096708bc6bc09",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1142c8ed_116a09c9",
        "filename": "src/restconf/uri.h",
        "patchSetId": 4
      },
      "lineNbr": 52,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-08-09T20:46:45Z",
      "side": 1,
      "message": "let\u0027s turn this into a public member (unless there\u0027s some reason for encapsulation that I miss)",
      "range": {
        "startLine": 49,
        "startChar": 0,
        "endLine": 52,
        "endChar": 40
      },
      "revId": "9b17a1f65a7d45d84736bc7b0fa096708bc6bc09",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e039f7ea_3ee348f3",
        "filename": "tests/uri-parser.cpp",
        "patchSetId": 4
      },
      "lineNbr": 48,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-08-09T20:46:45Z",
      "side": 1,
      "message": "I think that a compiler \"might return a different copy of that vector\" here (it probably won\u0027t because of copy elision), and in that case this will be UB because it\u0027s comparing iterators from two different vectors.\n\nOne more reason to have a publicly accessible member.",
      "range": {
        "startLine": 48,
        "startChar": 14,
        "endLine": 48,
        "endChar": 64
      },
      "revId": "9b17a1f65a7d45d84736bc7b0fa096708bc6bc09",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68"
    }
  ]
}