{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "2991518e_c1b4100e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-05-28T10:09:26Z",
      "side": 1,
      "message": "Thanks for your patch!\n\nFor now our only use of systemd is for journald logging, which is not a required feature. However, the application itself does not contain any code for daemonization, so when using a \"legacy\" init system you\u0027ll need \"something\" which keeps running rousette in the background (the usual double-fork method). We have no intention of including such code in future, so I hope you\u0027re OK with running rousette under such a wrapper.\n\nAlso, I wonder if these wrappers maybe offer a way to forward stdout/stderr to syslog automatically; if they did that, maybe we could drop that extra syslog sink? What do you think?\n\nWe were thinking about using, say, socket activation and nft packet filtering when we were designing the auth model, but in the end I *hope* that we can keep not depending on systemd going forward. No hard guarantees from me, though, since we do have systemd in our target platform, and it\u0027s very convenient to rely on features in a 3rd-party library like these. I can promise that we\u0027ll keep you in the loop if we find a feature in systemd that we like hard enough to consider depending on it.\n\nAlso please update the README so that it\u0027s listed as an optional dependency.",
      "revId": "d6dfc53d7b6ee16afe9d9be1176580aae35d234d",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "513ed7a5_b2e9d9ce",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000164
      },
      "writtenOn": "2024-05-29T08:18:51Z",
      "side": 1,
      "message": "We are using finit (https://github.com/troglobit/finit) as init process, which also rely on that process are kept in foreground.\n\nNo, sorry, stdout from processes spawned by finit is lost, so syslog is required.\n\nIt would be great to not have hard dependency on systemd, if so we hopefully can help a little with the development.",
      "parentUuid": "2991518e_c1b4100e",
      "revId": "d6dfc53d7b6ee16afe9d9be1176580aae35d234d",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8e9016a4_adb76d80",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-05-29T10:46:46Z",
      "side": 1,
      "message": "Awesome, and thanks for clarification. I was curious and I found https://github.com/troglobit/finit/blob/master/doc/config.md#redirecting-output , but I guess that would lose the severity information, and I agree that there\u0027s value in logging to syslog.",
      "parentUuid": "513ed7a5_b2e9d9ce",
      "revId": "d6dfc53d7b6ee16afe9d9be1176580aae35d234d",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6ff79e71_8c9666f1",
        "filename": "CMakeLists.txt",
        "patchSetId": 1
      },
      "lineNbr": 77,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-05-28T10:09:26Z",
      "side": 1,
      "message": "This changes the build in a way that systemd support is not a default choice anymore, and that it requires passing an extra option. That\u0027s not a default behavior that I would be happy with :).\n\nCMake unfortunately is not that great when it comes to \"auto/on/off\" options, they require some rather long code. I think it\u0027s actually easier to simply drop the `REQUIRED` keyword, and do just:\n \npkg_check_modules(SYSTEMD IMPORTED_TARGET libsystemd)\n...\nif(SYSTEMD_FOUND)\n  target_link_libraries(...)\nendif()\n\nYes, it\u0027s still an automagic dependency, but one can always override package detection via standard CMake options, so it should keep doing \"the right thing\" for us by default, while still allowing you to build without systemd.",
      "revId": "d6dfc53d7b6ee16afe9d9be1176580aae35d234d",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e522f002_c61c43eb",
        "filename": "CMakeLists.txt",
        "patchSetId": 1
      },
      "lineNbr": 77,
      "author": {
        "id": 1000164
      },
      "writtenOn": "2024-05-29T08:18:51Z",
      "side": 1,
      "message": "Thanks a lot for this! Seems like a great solution. I am not used of cmake so i was not really sure on how to solve it in cmake.",
      "parentUuid": "6ff79e71_8c9666f1",
      "revId": "d6dfc53d7b6ee16afe9d9be1176580aae35d234d",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0442d43c_1be990db",
        "filename": "CMakeLists.txt",
        "patchSetId": 1
      },
      "lineNbr": 78,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-05-28T10:09:26Z",
      "side": 1,
      "message": "In modern CMake, this is usually done via `configure_file`. For an example, see https://github.com/CESNET/velia/blob/baf289c6de9131db8ff87ad618000520698f4b00/CMakeLists.txt#L324 (and https://github.com/CESNET/velia/blob/baf289c6de9131db8ff87ad618000520698f4b00/tests/configure.cmake.h.in for how that file looks like). Keeping these definitions in include files makes it easier to track them, and it also only affects translation units which need these data -- leading to quicker build times upon changes, etc.",
      "revId": "d6dfc53d7b6ee16afe9d9be1176580aae35d234d",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "93e5415f_4c32b96c",
        "filename": "CMakeLists.txt",
        "patchSetId": 1
      },
      "lineNbr": 78,
      "author": {
        "id": 1000164
      },
      "writtenOn": "2024-05-29T08:18:51Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "0442d43c_1be990db",
      "revId": "d6dfc53d7b6ee16afe9d9be1176580aae35d234d",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b1665cd6_983ec971",
        "filename": "CMakeLists.txt",
        "patchSetId": 1
      },
      "lineNbr": 126,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-05-28T10:09:26Z",
      "side": 1,
      "message": "This repeats some bits, so let\u0027s do it this way please:\n \ntarget_link_libraries(rousette PUBLIC rousette-restconf)\nif(SYSTEMD_FOUND)\n  target_link_libraries(rousette PUBLIC PkgConfig::SYSTEMD)\nendif()",
      "range": {
        "startLine": 122,
        "startChar": 0,
        "endLine": 126,
        "endChar": 7
      },
      "revId": "d6dfc53d7b6ee16afe9d9be1176580aae35d234d",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "199f128d_d9065a3c",
        "filename": "CMakeLists.txt",
        "patchSetId": 1
      },
      "lineNbr": 126,
      "author": {
        "id": 1000164
      },
      "writtenOn": "2024-05-29T08:18:51Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "b1665cd6_983ec971",
      "range": {
        "startLine": 122,
        "startChar": 0,
        "endLine": 126,
        "endChar": 7
      },
      "revId": "d6dfc53d7b6ee16afe9d9be1176580aae35d234d",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "039acf6d_8168db65",
        "filename": "src/restconf/main.cpp",
        "patchSetId": 1
      },
      "lineNbr": 15,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-05-28T10:09:26Z",
      "side": 1,
      "message": "nit: when doing conditional includes, please make the conditional statements indented like this:\n \n#if ...\n#  include ...",
      "revId": "d6dfc53d7b6ee16afe9d9be1176580aae35d234d",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9951d771_49b770e1",
        "filename": "src/restconf/main.cpp",
        "patchSetId": 1
      },
      "lineNbr": 15,
      "author": {
        "id": 1000164
      },
      "writtenOn": "2024-05-29T08:18:51Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "039acf6d_8168db65",
      "revId": "d6dfc53d7b6ee16afe9d9be1176580aae35d234d",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "34176870_e8aef1e5",
        "filename": "src/restconf/main.cpp",
        "patchSetId": 1
      },
      "lineNbr": 58,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-05-28T10:09:26Z",
      "side": 1,
      "message": "nit: this is a whitespace change which does not belong to this patch; please remove it from your commit.",
      "range": {
        "startLine": 47,
        "startChar": 0,
        "endLine": 58,
        "endChar": 75
      },
      "revId": "d6dfc53d7b6ee16afe9d9be1176580aae35d234d",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "76903338_28357c02",
        "filename": "src/restconf/main.cpp",
        "patchSetId": 1
      },
      "lineNbr": 58,
      "author": {
        "id": 1000164
      },
      "writtenOn": "2024-05-29T08:18:51Z",
      "side": 1,
      "message": "I formatted the whole file (using your .clang-format), to ensure i followed coding style. But yes, should not be in my commit.\n\nAck",
      "parentUuid": "34176870_e8aef1e5",
      "range": {
        "startLine": 47,
        "startChar": 0,
        "endLine": 58,
        "endChar": 75
      },
      "revId": "d6dfc53d7b6ee16afe9d9be1176580aae35d234d",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3afd7a4e_f9950047",
        "filename": "src/restconf/main.cpp",
        "patchSetId": 1
      },
      "lineNbr": 58,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-05-29T10:46:46Z",
      "side": 1,
      "message": "yeah, we are not terribly consistent :(",
      "parentUuid": "76903338_28357c02",
      "range": {
        "startLine": 47,
        "startChar": 0,
        "endLine": 58,
        "endChar": 75
      },
      "revId": "d6dfc53d7b6ee16afe9d9be1176580aae35d234d",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a87d2137_517515be",
        "filename": "src/restconf/main.cpp",
        "patchSetId": 1
      },
      "lineNbr": 81,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-05-28T10:09:26Z",
      "side": 1,
      "message": "@Tomas, do you think it\u0027s reasonable to always, unconditionally log to syslog when built without libsystemd?",
      "revId": "d6dfc53d7b6ee16afe9d9be1176580aae35d234d",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d657d82e_8b0520b0",
        "filename": "src/restconf/main.cpp",
        "patchSetId": 1
      },
      "lineNbr": 81,
      "author": {
        "id": 1000070
      },
      "writtenOn": "2024-05-28T12:05:33Z",
      "side": 1,
      "message": "Hello.\n\nConsidering rousette always runs on foreground I think it does not make sense to redirect everything to syslog. This might be confusing a bit because nothing is outputted. I would prefer that this syslog redirection is done by the daemonizing wrapper.\n\nAn alternative solution might be a \"--syslog\" parameter. In that way user can explicitly ask for syslog logging.",
      "parentUuid": "a87d2137_517515be",
      "revId": "d6dfc53d7b6ee16afe9d9be1176580aae35d234d",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b3900852_0345bb96",
        "filename": "src/restconf/main.cpp",
        "patchSetId": 1
      },
      "lineNbr": 81,
      "author": {
        "id": 1000164
      },
      "writtenOn": "2024-05-29T08:18:51Z",
      "side": 1,
      "message": "A runtime option for syslog maybe is a good solution, but do you see a need for syslog AND journal logging at the same time?\n\nMaybe this is way you want?\n1. systemd (default)\n2. syslog (instead of systemd) (--syslog)\n3. stdout (instead of systemd) (--log-to-stdout)",
      "parentUuid": "d657d82e_8b0520b0",
      "revId": "d6dfc53d7b6ee16afe9d9be1176580aae35d234d",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "335ff2fd_dbe5d8b6",
        "filename": "src/restconf/main.cpp",
        "patchSetId": 1
      },
      "lineNbr": 81,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-05-29T10:46:46Z",
      "side": 1,
      "message": "I agree with Tomas that it might be a bit confusing to have a \"non-daemon\" which \"silently\" logs into syslog -- that\u0027s like solving a problem only half-way. Here\u0027s what I think would work best:\n\n- if an option is passed, log to syslog no matter what\n- otherwise, if built with systemd and if is_journald_active() is true, log to journal\n- otherwise, log to stderr\n\nYou\u0027ll probably need a CLI option parsing library; please look at how https://github.com/CESNET/velia uses docopt-cpp for this purpose.",
      "parentUuid": "b3900852_0345bb96",
      "revId": "d6dfc53d7b6ee16afe9d9be1176580aae35d234d",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6688f63a_d66dea1f",
        "filename": "src/restconf/main.cpp",
        "patchSetId": 1
      },
      "lineNbr": 81,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-06-03T16:15:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "335ff2fd_dbe5d8b6",
      "revId": "d6dfc53d7b6ee16afe9d9be1176580aae35d234d",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68"
    }
  ]
}