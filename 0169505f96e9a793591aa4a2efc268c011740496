{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "568e2a26_90cbbaac",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-02-26T07:53:03Z",
      "side": 1,
      "message": "Last week I got stuck on the possible issue of access management. As it is, this code would allow anonymous users to fetch any YANG schemas, which, IMHO, might be problematic in several ways:\n\n- an attacker can check if a potentially \"vulnerable\" schema is enabled,\n- the server might divulge confidential information.\n\nSince the NACM cannot help directly (this is not about access to a data tree after all), I was wondering if we can somehow map these requests to \"regular\" RESTCONF data requests. That way, any schema request can perform an internal lookup of the data (subject to the usual NACM runtime checking). If that passes, we return the YANG model\u0027s content to the external client, and if it fails, we return an error.\n\nAt first, I was thinking about introducing a new model for this, and then it occurred to me that the ietf-yang-library can be probably used for this as well. If we want to be fancy, we might add a simple augment to put an empty leaf below each `/ietf-yang-library:yang-library/module-set[name\u003d...]/module` (or `import-only-module`), and perform the NACM check on its value.\n\nWhat do you think?",
      "revId": "0169505f96e9a793591aa4a2efc268c011740496",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fb237ffc_56e62d39",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000070
      },
      "writtenOn": "2024-02-28T14:04:33Z",
      "side": 1,
      "message": "Well, yes, it is indeed a possibility. Writing a model for this is easy. Requesting that dummy leaf is easy too. Writing some NACM rules... doable but not that easy (they must fit into our \"anonymous\" user handling). Wrapping all this inside all that PAM\u0027n\u0027NACM-auth code... doable.\n\nIt won\u0027t be nice, but we can do that. I think it will be a lot of code so I can do this in another commit if we want this now.",
      "parentUuid": "568e2a26_90cbbaac",
      "revId": "0169505f96e9a793591aa4a2efc268c011740496",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "62bacd72_5bd2d582",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-03-04T09:34:08Z",
      "side": 1,
      "message": "Since the NETCONF protocol uses a custom RPC, the `\u003cget-schema\u003e` (https://datatracker.ietf.org/doc/html/rfc6022#section-3.1), for YANG schema retrieval, I think that the simplest solution is to internally check whether this RPC is NACM-allowed or NACM-blocked. If it\u0027s allowed, then return the YANG schema, if it is not allowed, reply with an error.",
      "parentUuid": "568e2a26_90cbbaac",
      "revId": "0169505f96e9a793591aa4a2efc268c011740496",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f0d95635_73557d9d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-03-05T14:06:45Z",
      "side": 1,
      "message": "(we talked about this in person, this is just my note to capture what was discussed)\n\nIn NETCONF, there\u0027s no concept of anonymous users, but we have an \"extension\" for this in our RESTCONF implementation. So, compared to authenticated NETCONF, our code exposes another path where users might \"fingerprint\" the YANG models that are implemented on a server. In order to prevent divulging info about some implemented modules to anonymous users (while still allowing some other operations), it\u0027s already possible to set up some fine-grained NACM ACLs which filter out parts of the ietf-yang-library module. By doing that, it\u0027s possible to say that an anonymous users should have access to data about module A, but not about module B. IMHO, it makes sense to use this mechanism also for allowing schema retrieval.\n\nTL;DR: I like the approach where the schema-retrieval endpoint performs the NACM auth in the exact same manner as any other data request. Once the identity is known, an internal request to the /ietf-yang-library:.../location will be performed. If it\u0027s NACM-blocked, return back an error. If it succeeds, return the YANG schema. This way, there\u0027s no need to have fancy augments or to perform a dummy RPC; it\u0027s just a simple data retrieval that\u0027s going to be checked for NACM access rules by sysrepo.",
      "parentUuid": "62bacd72_5bd2d582",
      "revId": "0169505f96e9a793591aa4a2efc268c011740496",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "15d01359_80df9365",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-03-19T14:30:15Z",
      "side": 1,
      "message": "done via https://gerrit.cesnet.cz/c/CzechLight/rousette/+/6991",
      "parentUuid": "f0d95635_73557d9d",
      "revId": "0169505f96e9a793591aa4a2efc268c011740496",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68"
    }
  ]
}